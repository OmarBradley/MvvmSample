apply plugin : 'com.android.application'
apply plugin : 'kotlin-android'
apply plugin : 'kotlin-kapt'
apply plugin : 'de.mannodermaus.android-junit5'
apply plugin : 'kotlin-android-extensions'

android {

    compileSdkVersion rootProject.config.sdkVersion
    buildToolsVersion rootProject.config.buildToolSdkVersion

    defaultConfig {
        applicationId "com.example.mvvmsample"

        def config = rootProject.ext.config

        minSdkVersion config.minSdkVersion
        targetSdkVersion config.sdkVersion
        versionCode config.versionCode
        versionName config.versionName
        testInstrumentationRunner config.testInstrumentationRunner
        testInstrumentationRunnerArgument config.testInstrumentationRunnerArgument[0], config.testInstrumentationRunnerArgument[1]
        multiDexEnabled true
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    testOptions {
        junitPlatform {
            filters {
                engines {
                    include 'spek2'
                }
            }
        }
    }

    tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile).all {
        sourceCompatibility = JavaVersion.VERSION_1_8
        targetCompatibility = JavaVersion.VERSION_1_8

        kotlinOptions {
            jvmTarget = '1.8'
        }
    }

    kotlin {
        experimental {
            coroutines 'enable'
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    packagingOptions {
        exclude 'META-INF/LICENSE'
        exclude "META-INF/LICENSE-notice.md"
    }

}

dependencies {

    def dependencies = rootProject.ext.dependencies

    implementation dependencies.appcompatV7
    implementation dependencies.kotlinStdlib
    implementation dependencies.kotlinReflect
    implementation dependencies.constraintLayout
    implementation dependencies.ktx
    implementation dependencies.dagger
    implementation dependencies.daggerAndroid
    implementation dependencies.daggerAndroidSupport
    implementation dependencies.ankoCommon
    implementation dependencies.rxAndroid
    implementation dependencies.rxBindingKotlin
    implementation dependencies.rxPermissions
    implementation dependencies.rxlifecycleKotlin
    implementation dependencies.rxlifecycleAndroidLifecycleKotlin
    implementation dependencies.rxKotlin
    implementation dependencies.lifecycleViewmodelKtx
    implementation dependencies.lifecycleExtensions
    implementation dependencies.roomRuntime
    implementation dependencies.roomRxJava2

    kapt dependencies.daggerComiler
    kapt dependencies.daggerAndroidProcessor
    kapt dependencies.lifecycleViewmodelKtx
    kapt dependencies.roomCompiler

    testImplementation dependencies.junitJupiterApi
    testImplementation dependencies.junitJupiterParams
    testImplementation dependencies.mockitoKotlin
    testImplementation dependencies.hamcrest
    testImplementation dependencies.spekApi
    testImplementation dependencies.spekJunitPlatformEngine
    testImplementation dependencies.roomTesting
    testRuntimeOnly dependencies.kotlinReflect

    androidTestImplementation dependencies.testRunner
    androidTestImplementation dependencies.androidRules
    androidTestImplementation dependencies.espressoCore
    androidTestImplementation dependencies.uiAutomator
    androidTestImplementation dependencies.workManagerTesting

}

androidExtensions {
    experimental = true
}




